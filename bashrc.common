#
# ~/.bashrc.common
#

alias wortel='sudo su -'

[ -r ~/.bashrc.`hostname -s` ] && . ~/.bashrc.`hostname -s`

alias cp='cp -vi'
alias mv='mv -vi'
alias rm='rm -vi'

alias ls='ls -F'
alias l='ls -lF'
alias la='ls -laF'
alias ll='ls -lAF'

# Usage: pwgen [ OPTIONS ] [ pw_length ] [ num_pw ]
# 
# Options supported by pwgen:
#   -c or --capitalize
# 	Include at least one capital letter in the password
#   -A or --no-capitalize
# 	Don't include capital letters in the password
#   -n or --numerals
# 	Include at least one number in the password
#   -0 or --no-numerals
# 	Don't include numbers in the password
#   -y or --symbols
# 	Include at least one special symbol in the password
#   -r <chars> or --remove-chars=<chars>
# 	Remove characters from the set of characters to generate passwords
#   -s or --secure
# 	Generate completely random passwords
#   -B or --ambiguous
# 	Don't include ambiguous characters in the password
#   -h or --help
# 	Print a help message
#   -H or --sha1=path/to/file[#seed]
# 	Use sha1 hash of given file as a (not so) random generator
#   -C
# 	Print the generated passwords in columns
#   -1
# 	Don't print the generated passwords in columns
#   -v or --no-vowels
# 	Do not use any vowels so as to avoid accidental nasty words
#
alias pwgen='pwgen -c -n -s -B'

function lsswap () {
	awk '
/^Name/ { printf "%s", $2 }
/^Pid/ { printf " (%s)", $2 }
/^VmSwap/ { printf " %s%s\n", $2, $3 }
' /proc/[0-9]*/status \
		| awk '{ printf "%-24s  %0d %s\n", $1" "$2, $3 }' \
		| sort -nk3 -r
	return $?
}

[ -d ~/bin ] && export "PATH=$PATH:~/bin"
[ -d ~/.bashrc-enabled.d ] && for F in ~/.bashrc-enabled.d/*; do source $F; done

#.
